# Generated by Django 2.1.5 on 2019-01-18 10:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geo', '0001_initial'),
        ('cliente', '0001_initial'),
        ('catalogo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consumo',
            fields=[
                ('codconsumo', models.IntegerField(editable=False, primary_key=True, serialize=False, verbose_name='Codigo Consumo')),
                ('fecha_mes', models.DateField(blank=True, null=True, verbose_name='Fecha')),
                ('dia_inicio', models.DateField(blank=True, null=True, verbose_name='dia_inicio')),
                ('dia_final', models.DateField(blank=True, null=True, verbose_name='dia_final')),
                ('totaleuros', models.FloatField(blank=True, default=0.0, verbose_name='Total Euros')),
                ('codcliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Consumo_Cliente', to='cliente.Cliente', verbose_name='Codigo Cliente')),
            ],
        ),
        migrations.CreateModel(
            name='facturasCli',
            fields=[
                ('idfactura', models.IntegerField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(max_length=12)),
                ('numero', models.CharField(max_length=12)),
                ('totaleuros', models.FloatField()),
                ('hora', models.TimeField()),
                ('direccion', models.CharField(max_length=100)),
                ('codejercicio', models.CharField(max_length=4)),
                ('total', models.FloatField()),
                ('ciudad', models.CharField(blank=True, max_length=100, null=True)),
                ('codpostal', models.CharField(blank=True, max_length=10, null=True)),
                ('automatica', models.BooleanField(default=True)),
                ('nombrecliente', models.CharField(max_length=100)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('totaliva', models.FloatField()),
                ('fecha', models.DateField()),
                ('neto', models.FloatField()),
                ('deabono', models.BooleanField(default=False)),
                ('editable', models.BooleanField(default=False)),
                ('codalmacen', models.CharField(blank=True, max_length=4, null=True)),
                ('cifnif', models.CharField(max_length=20)),
                ('nogenerarasiento', models.BooleanField(default=True)),
                ('idfacturarect', models.IntegerField(blank=True, null=True)),
                ('provincia', models.CharField(blank=True, max_length=100, null=True)),
                ('codigorect', models.CharField(blank=True, max_length=12, null=True)),
                ('totalrecargo', models.FloatField(blank=True, null=True)),
                ('codagente', models.CharField(blank=True, max_length=10, null=True)),
                ('recfinanciero', models.FloatField()),
                ('idpagodevol', models.IntegerField(blank=True, null=True)),
                ('totalirpf', models.FloatField()),
                ('apartado', models.CharField(blank=True, max_length=10, null=True)),
                ('codserie', models.CharField(max_length=2)),
                ('porcomision', models.FloatField(blank=True, null=True)),
                ('irpf', models.FloatField()),
                ('idasiento', models.IntegerField(blank=True, null=True)),
                ('tpv', models.BooleanField(default=False)),
                ('tasaconv', models.FloatField()),
                ('codcliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cliente.Cliente')),
                ('coddir', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factura_direccion', to='cliente.DirClientes')),
            ],
        ),
        migrations.CreateModel(
            name='FormasEnvio',
            fields=[
                ('idEnvio', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=250, verbose_name='Nombre [ES]')),
                ('nombre_va', models.CharField(blank=True, max_length=250, verbose_name='Nombre [VA]')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción [ES]')),
                ('descripcion_va', models.TextField(blank=True, null=True, verbose_name='Descripción [VA]')),
                ('precio', models.FloatField(verbose_name='Precio')),
            ],
            options={
                'verbose_name': 'Métodos de envío',
            },
        ),
        migrations.CreateModel(
            name='FormasPago',
            fields=[
                ('codpago', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=250, verbose_name='Nombre [ES]')),
                ('nombre_va', models.CharField(blank=True, max_length=250, verbose_name='Nombre [VA]')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción [ES]')),
                ('descripcion_va', models.TextField(blank=True, null=True, verbose_name='Descripción [VA]')),
                ('cod_eneboo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Código Eneboo')),
                ('activa', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Métodos de Pago',
            },
        ),
        migrations.CreateModel(
            name='Impuesto',
            fields=[
                ('codimpuesto', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('recargo', models.FloatField(verbose_name='Recargo')),
                ('descripcion', models.CharField(max_length=50, verbose_name='Descripción')),
                ('iva', models.FloatField(validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1000.5)], verbose_name='IVA')),
            ],
        ),
        migrations.CreateModel(
            name='LineaPedidoCli',
            fields=[
                ('idlinea', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('pvpsindto', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1000.5)], verbose_name='pvpsindto')),
                ('pvpunitario', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1000.5)], verbose_name='pvpunitario')),
                ('cantidad', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1000.5)], verbose_name='cantidad')),
                ('pvptotal', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1000.5)], verbose_name='pvptotal')),
                ('descripcion', models.CharField(blank=True, max_length=100, null=True, verbose_name='descripcion')),
                ('idlineapresupuesto', models.IntegerField(default=0, editable=False, verbose_name='idlineapresupuesto')),
                ('cerrada', models.BooleanField(default=False, verbose_name='cerrada')),
                ('porcomision', models.FloatField(blank=True, null=True, verbose_name='porcomision')),
                ('iva', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1000.5)], verbose_name='IVA')),
                ('totalenalbaran', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1000.5)], verbose_name='totalenalbaran')),
                ('codimpuesto', models.ForeignKey(default='IVA18%', on_delete=django.db.models.deletion.PROTECT, related_name='LineaPedidoCli_Impuesto', to='facturacion.Impuesto', verbose_name='codimpuesto')),
            ],
        ),
        migrations.CreateModel(
            name='lineasfacturascli',
            fields=[
                ('idlinea', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('pvptotal', models.FloatField(default=0)),
                ('cantidad', models.FloatField(default=0)),
                ('irpf', models.FloatField(blank=True, default=0, null=True)),
                ('recargo', models.FloatField(blank=True, default=0, null=True)),
                ('dtolineal', models.FloatField(default=0)),
                ('descripcion', models.CharField(blank=True, max_length=100, null=True)),
                ('idalbaran', models.IntegerField(blank=True, null=True)),
                ('codimpuesto', models.CharField(blank=True, max_length=10, null=True)),
                ('porcomision', models.FloatField(blank=True, default=0, null=True)),
                ('iva', models.FloatField(blank=True, null=True)),
                ('dtopor', models.FloatField(default=0)),
                ('pvpsindto', models.FloatField(default=0)),
                ('idliquidacio', models.IntegerField(blank=True, null=True)),
                ('pvpunitario', models.FloatField(default=0)),
                ('idfactura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facturacion.facturasCli')),
                ('referencia', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalogo.Articulo')),
            ],
        ),
        migrations.CreateModel(
            name='PedidoCli',
            fields=[
                ('idpedido', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('cifnif', models.CharField(blank=True, max_length=20, null=True, verbose_name='CIFNIF')),
                ('nombrecliente', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre Cliente')),
                ('direccion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dirección')),
                ('provincia', models.CharField(blank=True, max_length=100, null=True, verbose_name='Provincia')),
                ('idprovincia', models.CharField(editable=False, max_length=100, null=True, verbose_name='Id Provincia')),
                ('ciudad', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad')),
                ('codpostal', models.CharField(blank=True, max_length=10, null=True, verbose_name='Codigo Postal')),
                ('nombreclienteFacturacion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre Cliente Facturacion')),
                ('cifnifFacturacion', models.CharField(blank=True, max_length=20, null=True, verbose_name='CIFNIF Facturacion')),
                ('codpais', models.CharField(blank=True, max_length=20, null=True, verbose_name='Codigo Pais')),
                ('direccionEnvio', models.CharField(blank=True, max_length=200, null=True, verbose_name='Dirección de Envío')),
                ('provinciaEnvio', models.CharField(blank=True, max_length=100, null=True, verbose_name='Provincia de envío')),
                ('idprovinciaEnvio', models.CharField(editable=False, max_length=100, null=True, verbose_name='Id Provincia de Envío')),
                ('ciudadEnvio', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad de Envío')),
                ('codpostalEnvio', models.CharField(blank=True, max_length=10, null=True, verbose_name='Codigo Postal de Envío')),
                ('codigo', models.CharField(blank=True, max_length=13, null=True, verbose_name='Codigo')),
                ('tasaconv', models.FloatField(blank=True, default=0.5, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1000.5)], verbose_name='Tasa conv')),
                ('codejercicio', models.CharField(blank=True, max_length=4, null=True, verbose_name='Codigo Ejercicio')),
                ('irpf', models.FloatField(blank=True, default=0.5, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1000.5)], verbose_name='IRPF')),
                ('totaleuros', models.FloatField(blank=True, default=0.5, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1006.5)], verbose_name='Total Euros')),
                ('total', models.FloatField(blank=True, default=0.5, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1006.5)], verbose_name='Total')),
                ('totaliva', models.FloatField(blank=True, default=0.5, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1006.5)], verbose_name='Iva')),
                ('neto', models.FloatField(blank=True, default=0.5, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1006.5)], verbose_name='Neto')),
                ('porcomision', models.FloatField(blank=True, default=0.5, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(1006.5)], verbose_name='Por comisión')),
                ('idpresupuesto', models.IntegerField(blank=True, default=0, verbose_name='Id presupuesto')),
                ('observaciones', tinymce.models.HTMLField(blank=True, null=True)),
                ('servido', models.CharField(blank=True, max_length=10, null=True, verbose_name='Servido')),
                ('editable', models.NullBooleanField(default=0, verbose_name='Editable')),
                ('codalmacen', models.CharField(blank=True, max_length=4, null=True, verbose_name='Codigo almacen')),
                ('fechasalida', models.DateField(blank=True, null=True, verbose_name='Fecha Salida')),
                ('numero', models.CharField(blank=True, max_length=12, null=True, verbose_name='Numero')),
                ('fecha', models.DateField(blank=True, null=True, verbose_name='Fecha')),
                ('estado', models.IntegerField(choices=[(0, 'En proceso'), (1, 'Enviado'), (2, 'Entregado'), (3, 'Cancelado')], default=0, verbose_name='Estado del pedido')),
                ('pagado', models.BooleanField(default=False)),
                ('created_at', models.IntegerField(default=0, editable=False)),
                ('updated_at', models.IntegerField(default=0, editable=False)),
                ('generar_factura', models.BooleanField(default=False, verbose_name='Generar Factura')),
                ('codcliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='PedidoCli_Cliente', to='cliente.Cliente', verbose_name='Codigo Cliente')),
                ('coddir', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='PedidoCli_DirClientes', to='cliente.DirClientes', verbose_name='Codigo Dirección')),
                ('coddirEnvio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='PedidoCli_DirClientesEnvio', to='cliente.DirClientes', verbose_name='Codigo Dirección Envío')),
                ('codpago', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='facturacion.FormasPago', verbose_name='Formas de Pago - TPV')),
                ('formaEnvio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='PedidoCli_FormasEnvio', to='facturacion.FormasEnvio', verbose_name='Forma de envío')),
                ('formaPago', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='PedidoCli_FormasPago', to='facturacion.FormasPago', verbose_name='Forma de pago')),
            ],
            options={
                'verbose_name': 'Pedido',
            },
        ),
        migrations.AddField(
            model_name='lineapedidocli',
            name='idpedido',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='LineaPedidoCli_PedidoCli', to='facturacion.PedidoCli', verbose_name='idpedido'),
        ),
        migrations.AddField(
            model_name='lineapedidocli',
            name='referencia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='LineaPedidoCli_Articulo', to='catalogo.Articulo', verbose_name='referencia'),
        ),
        migrations.AddField(
            model_name='facturascli',
            name='codpago',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facturacion.FormasPago'),
        ),
        migrations.AddField(
            model_name='facturascli',
            name='codpais',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.Pais'),
        ),
        migrations.AddField(
            model_name='facturascli',
            name='idpedido',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='facturacion.PedidoCli'),
        ),
        migrations.AddField(
            model_name='facturascli',
            name='idprovincia',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.Provincia'),
        ),
    ]
